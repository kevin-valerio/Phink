<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_INJECTED_CODE" value="false" />
    <option name="SCOPE_TYPE" value="3" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
    <cargoProject FILE="$PROJECT_DIR$/sample/vault/Cargo.toml" />
    <cargoProject FILE="$PROJECT_DIR$/sample/flipper/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4a35029e-7e93-4a0f-8b22-610225cf270d" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Cargo.lock" beforeDir="false" afterPath="$PROJECT_DIR$/Cargo.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/externalities.rs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/selectors.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/selectors.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;kevin-valerio&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="cc1afaec-0fb9-4fec-8359-32266e8b73a6" />
        <option name="url" value="git@github.com:kevin-valerio/phink.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/e76b244/substrate/frame/contracts/src/lib.rs" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/.cargo/registry/src/index.crates.io-6f17d22bba15001f/text-size-1.1.1/src/size.rs" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/sample/bank/lib.rs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/main.rs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/mocks.rs" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="2wwigqn9" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2dFVGQTT8t6wt2HGlO6NtlwRWZv" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;Cargo.Build `Run phink`.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Build `Test ink_helper::fetches_selector`.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Build `Test selectors::fetch_correct_dns_constructor`.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Build `Test selectors::fetch_correct_flipper_selectors`.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Build `Test test_kevin`.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Run contracts-parachain-runtime-fuzz.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Run phink.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test flipper::e2e_tests::default_works.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test flipper::e2e_tests::it_works.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test flipper::tests::default_works.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test ink_helper::fetches_selector.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test ink_helper::rez.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test instantiate_and_call_and_deposit_event.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test selectors::bytes_to_command.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test selectors::fetch_correct_dns_constructor.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test selectors::fetch_correct_flipper_selectors.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test selectors::fetches_selector.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test test_evm_call_wasm.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test test_kevin.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tests::flipping.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tg.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.fmt [phink].executor&quot;: &quot;Run&quot;,
    &quot;NIXITCH_NIXPKGS_CONFIG&quot;: &quot;&quot;,
    &quot;NIXITCH_NIX_CONF_DIR&quot;: &quot;&quot;,
    &quot;NIXITCH_NIX_OTHER_STORES&quot;: &quot;&quot;,
    &quot;NIXITCH_NIX_PATH&quot;: &quot;&quot;,
    &quot;NIXITCH_NIX_PROFILES&quot;: &quot;&quot;,
    &quot;NIXITCH_NIX_REMOTE&quot;: &quot;&quot;,
    &quot;NIXITCH_NIX_USER_PROFILE_DIR&quot;: &quot;&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.rust.reset.selective.auto.import&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/kevinvalerio/Desktop/phink/src&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;org.rust.cargo.project.model.PROJECT_DISCOVERY&quot;: &quot;true&quot;,
    &quot;org.rust.cargo.project.model.impl.CargoExternalSystemProjectAware.subscribe.first.balloon&quot;: &quot;&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/sample/bank/lib.rs&quot;: &quot;true&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/sample/build.rs&quot;: &quot;true&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/sample/dns/lib.rs&quot;: &quot;true&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/sample/dummy_runtime/mocks.rs&quot;: &quot;true&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/sample/flipper.rs&quot;: &quot;true&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/sample/flipper/lib.rs&quot;: &quot;true&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/sample/substrate-contracts-node/runtime/src/lib.rs&quot;: &quot;true&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/sample/transfer/lib.rs&quot;: &quot;true&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/src/mocks.rs&quot;: &quot;true&quot;,
    &quot;org.rust.disableDetachedFileInspection/Users/kevinvalerio/Desktop/phink/src/parity_helper/parity_helper.rs&quot;: &quot;true&quot;,
    &quot;org.rust.first.attach.projects&quot;: &quot;true&quot;,
    &quot;org.rust.first.attach.projects.stats&quot;: &quot;true&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="ReadonlyStatusHandler">
    <option name="SHOW_DIALOG" value="false" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/sample" />
      <recent name="$PROJECT_DIR$/sample/dummy_runtime" />
      <recent name="$PROJECT_DIR$/seeds" />
      <recent name="$PROJECT_DIR$/sample/flipper" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/src/contract_helper" />
      <recent name="$PROJECT_DIR$/src/chain" />
      <recent name="$PROJECT_DIR$/src/parity_helper" />
      <recent name="$PROJECT_DIR$/sample" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="cargo fmt" />
    </option>
  </component>
  <component name="RunManager" selected="Cargo.Test selectors::bytes_to_command">
    <configuration name="Test ink_helper::rez" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package phink --bin phink ink_helper::rez -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test selectors::bytes_to_command" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package phink --bin phink selectors::bytes_to_command -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test selectors::fetch_correct_dns_constructor" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package phink --bin phink selectors::fetch_correct_dns_constructor -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test selectors::fetch_correct_flipper_selectors" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package phink --bin phink selectors::fetch_correct_flipper_selectors -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test selectors::fetches_selector" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package phink --bin phink selectors::fetches_selector -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Test selectors::bytes_to_command" />
        <item itemvalue="Cargo.Test selectors::fetch_correct_dns_constructor" />
        <item itemvalue="Cargo.Test selectors::fetch_correct_flipper_selectors" />
        <item itemvalue="Cargo.Test selectors::fetches_selector" />
        <item itemvalue="Cargo.Test ink_helper::rez" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4a35029e-7e93-4a0f-8b22-610225cf270d" name="Changes" comment="" />
      <created>1709603718463</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1709603718463</updated>
      <workItem from="1709603719435" duration="7081000" />
      <workItem from="1709611965776" duration="35767000" />
      <workItem from="1709872518106" duration="19692000" />
      <workItem from="1710215037684" duration="598000" />
      <workItem from="1710216740503" duration="290000" />
      <workItem from="1710217383124" duration="598000" />
      <workItem from="1710342352479" duration="4643000" />
      <workItem from="1711019986254" duration="1192000" />
      <workItem from="1711390041580" duration="597000" />
      <workItem from="1712306809622" duration="44044000" />
      <workItem from="1712758170203" duration="594000" />
      <workItem from="1712760149457" duration="5583000" />
      <workItem from="1712828388500" duration="18624000" />
      <workItem from="1712925094783" duration="22596000" />
      <workItem from="1713190426702" duration="1412000" />
      <workItem from="1713191850543" duration="19415000" />
      <workItem from="1713271277435" duration="5905000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$USER_HOME$/.cargo/git/checkouts/polkadot-sdk-cff69157b985ed76/ec7817e/substrate/frame/contracts/src/lib.rs</url>
          <line>821</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>