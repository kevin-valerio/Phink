{
  "source": {
    "hash": "0x7a00efe143a80103630b39a852de054073d43705484c4cad1dd8f3bb7281a442",
    "language": "ink! 5.0.0",
    "compiler": "rustc 1.80.0-nightly",
    "build_info": {
      "build_mode": "Debug",
      "cargo_contract_version": "4.1.1",
      "rust_toolchain": "nightly-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "dns",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "image": null,
  "spec": {
    "constructors": [
      {
        "args": [],
        "default": false,
        "docs": [
          "Creates a new domain name service contract."
        ],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 20
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 29
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 16
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 31
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 4
      },
      "maxEventTopics": 4,
      "staticBufferSize": 16384,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 30
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "name",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "from",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Emitted whenever a new name is being registered."
        ],
        "label": "Register",
        "module_path": "dns::dns",
        "signature_topic": "0xa91ed333cbf806ff3f25106ce8b59989a3b2cbe2f90741a5cedafc1aa0652897"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "name",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "from",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "old_address",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 28
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "new_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Emitted whenever an address changes."
        ],
        "label": "SetAddress",
        "module_path": "dns::dns",
        "signature_topic": "0x882e41b0b9392d274953b77dcac6036c748eb2e086430ce19edc15d45a78df99"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "name",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "from",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "old_owner",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 28
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "new_owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Emitted whenever a name is being transferred."
        ],
        "label": "Transfer",
        "module_path": "dns::dns",
        "signature_topic": "0xbc825139df29f375fe63a4aa5c660eb82c943a456fe5fa65ad724d75172785b0"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 21
    },
    "messages": [
      {
        "args": [
          {
            "label": "name",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Register specific name with caller as owner."
        ],
        "label": "register",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0x229b553f"
      },
      {
        "args": [
          {
            "label": "id",
            "type": {
              "displayName": [
                "i32"
              ],
              "type": 18
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "phink_get_cov",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 25
        },
        "selector": "0xdc032900"
      },
      {
        "args": [
          {
            "label": "name",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 4
            }
          },
          {
            "label": "new_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Set address for specific name."
        ],
        "label": "set_address",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0xb8a4d3d9"
      },
      {
        "args": [
          {
            "label": "name",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 4
            }
          },
          {
            "label": "to",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "label": "number",
            "type": {
              "displayName": [
                "i32"
              ],
              "type": 18
            }
          }
        ],
        "default": false,
        "docs": [
          " Transfer owner to another address.",
          " Don't tell anyone, but this contract is vulnerable!",
          " A user can push FORBIDDEN_DOMAIN, as the developer forgot to handle `Error::ForbiddenDomain`"
        ],
        "label": "transfer",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0x84a15da1"
      },
      {
        "args": [
          {
            "label": "number",
            "type": {
              "displayName": [
                "i32"
              ],
              "type": 18
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "toz",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0x4c406b48"
      },
      {
        "args": [
          {
            "label": "name",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Get address for specific name."
        ],
        "label": "get_address",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0xd259f7ba"
      },
      {
        "args": [
          {
            "label": "name",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Get owner of specific name."
        ],
        "label": "get_owner",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0x07fcd0b1"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0x6e109198",
                      "ty": 0
                    }
                  },
                  "root_key": "0x6e109198",
                  "ty": 3
                }
              },
              "name": "name_to_address"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0x8e15cdd3",
                      "ty": 0
                    }
                  },
                  "root_key": "0x8e15cdd3",
                  "ty": 9
                }
              },
              "name": "name_to_owner"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 0
                }
              },
              "name": "default_address"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0x2d5dc532",
                      "ty": 4
                    }
                  },
                  "root_key": "0x2d5dc532",
                  "ty": 12
                }
              },
              "name": "domains"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 18
                }
              },
              "name": "dangerous_number"
            }
          ],
          "name": "DomainNameService"
        }
      },
      "root_key": "0x00000000",
      "ty": 19
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "K",
            "type": 4
          },
          {
            "name": "V",
            "type": 0
          },
          {
            "name": "KeyType",
            "type": 5
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "mapping",
          "Mapping"
        ]
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 6
          },
          {
            "name": "R",
            "type": 7
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ResolverKey"
        ]
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "composite": {}
        },
        "path": [
          "ink_storage_traits",
          "impls",
          "AutoKey"
        ]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 8
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ManualKey"
        ]
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "K",
            "type": 4
          },
          {
            "name": "V",
            "type": 0
          },
          {
            "name": "KeyType",
            "type": 10
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "mapping",
          "Mapping"
        ]
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 6
          },
          {
            "name": "R",
            "type": 11
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ResolverKey"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 8
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ManualKey"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "len",
                "type": 15,
                "typeName": "Lazy<u32, KeyType>"
              },
              {
                "name": "elements",
                "type": 17,
                "typeName": "Mapping<u32, V, KeyType>"
              }
            ]
          }
        },
        "params": [
          {
            "name": "V",
            "type": 4
          },
          {
            "name": "KeyType",
            "type": 13
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "vec",
          "StorageVec"
        ]
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 6
          },
          {
            "name": "R",
            "type": 14
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ResolverKey"
        ]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 8
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ManualKey"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "V",
            "type": 16
          },
          {
            "name": "KeyType",
            "type": 13
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "Lazy"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "K",
            "type": 16
          },
          {
            "name": "V",
            "type": 4
          },
          {
            "name": "KeyType",
            "type": 13
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "mapping",
          "Mapping"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "primitive": "i32"
        }
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "name_to_address",
                "type": 3,
                "typeName": "<Mapping<Hash, AccountId> as::ink::storage::traits::\nAutoStorableHint<::ink::storage::traits::ManualKey<2559643758u32,\n()>,>>::Type"
              },
              {
                "name": "name_to_owner",
                "type": 9,
                "typeName": "<Mapping<Hash, AccountId> as::ink::storage::traits::\nAutoStorableHint<::ink::storage::traits::ManualKey<3553432974u32,\n()>,>>::Type"
              },
              {
                "name": "default_address",
                "type": 0,
                "typeName": "<AccountId as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<3980412917u32, ()>,>>::Type"
              },
              {
                "name": "domains",
                "type": 12,
                "typeName": "<StorageVec<Hash> as::ink::storage::traits::AutoStorableHint<::\nink::storage::traits::ManualKey<851795245u32, ()>,>>::Type"
              },
              {
                "name": "dangerous_number",
                "type": 18,
                "typeName": "<i32 as::ink::storage::traits::AutoStorableHint<::ink::storage\n::traits::ManualKey<266870694u32, ()>,>>::Type"
              }
            ]
          }
        },
        "path": [
          "dns",
          "dns",
          "DomainNameService"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 21
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 8
          },
          {
            "name": "E",
            "type": 21
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 23
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 21
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 23
          },
          {
            "name": "E",
            "type": 21
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 24
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 8
          },
          {
            "name": "E",
            "type": 24
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "NameAlreadyExists"
              },
              {
                "index": 1,
                "name": "CallerIsNotOwner"
              },
              {
                "index": 2,
                "name": "ForbiddenDomain"
              }
            ]
          }
        },
        "path": [
          "dns",
          "dns",
          "Error"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 26
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 21
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 26
          },
          {
            "name": "E",
            "type": 21
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 21
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 21
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": 5
}